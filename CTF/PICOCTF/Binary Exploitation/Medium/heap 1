1.  Download the resources from page and check the code. 
2.  We can see that flagsize is 64 and both input_data and safe_var have memory allocated with malloc
3.  We check the next function : 
        void check_win() {
            if (!strcmp(safe_var, "pico")) {
                printf("\nYOU WIN\n");

                // Print flag
                char buf[FLAGSIZE_MAX];
                FILE *fd = fopen("flag.txt", "r");
                fgets(buf, FLAGSIZE_MAX, fd);
                printf("%s\n", buf);
                fflush(stdout);

                exit(0);
            } else {
                printf("Looks like everything is still secure!\n");
                printf("\nNo flage for you :(\n");
                fflush(stdout);
            }
        }
    and we see that safe_var is compared with string "pico" and the default value is "bico"
4.   Check from menu the value for safe_var with notice that it is bico. The same result is in in menu number one
5.   I performed a buffer overflow by sending the following string in the buffer (option 2 ) AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApico. It will change the value from first adress
to 32 A characters and after that it will replace the text from safe_var to pico. 
6. Get the flag with option 4 